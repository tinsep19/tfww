[0m[1mlocal_file.file: Refreshing state... [id=cbda819156a1a5eedad38dc64871b8ca157df994][0m

[0m[1m[32mNo changes.[0m[1m Your infrastructure matches the configuration.[0m

[0mTerraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.
[0m[32mSwitched to workspace "test-2".[0m
[33mâ•·[0m[0m
[33mâ”‚[0m [0m[1m[33mWarning: [0m[0m[1mValue for undeclared variable[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m[0mThe root module does not declare a variable named "input-2" but a value was
[33mâ”‚[0m [0mfound in file "envs/test-2.tfvars". If you meant to use this value, add a
[33mâ”‚[0m [0m"variable" block to the configuration.
[33mâ”‚[0m [0m
[33mâ”‚[0m [0mTo silence these warnings, use TF_VAR_... environment variables to provide
[33mâ”‚[0m [0mcertain "global" settings to all configurations in your organization. To
[33mâ”‚[0m [0mreduce the verbosity of these warnings, use the -compact-warnings option.
[33mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mNo value for required variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tf line 1:
[31mâ”‚[0m [0m   1: [4mvariable "input-1"[0m { type = string }[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThe root module input variable "input-1" is not set, and has no default
[31mâ”‚[0m [0mvalue. Use a -var or -var-file command line argument to provide a value for
[31mâ”‚[0m [0mthis variable.
[31mâ•µ[0m[0m
[0m[32m[1mCreated and switched to workspace "test-3"![0m[32m

You're now on a new, empty workspace. Workspaces isolate their state,
so if you run "terraform plan" Terraform will not see any existing state
for this configuration.[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # local_file.file[0m will be created
[0m  [32m+[0m[0m resource "local_file" "file" {
      [32m+[0m[0m content              = "test-3"
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "out/test-3/content.txt"
      [32m+[0m[0m id                   = (known after apply)
    }

[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m output-1 = "test-3"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Saved the plan to: plans/test-3.tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "plans/test-3.tfplan"
envs/test-3.tfvars : ok (no changes)
envs/test-1.tfvars : ok
envs/test-2.tfvars : error
